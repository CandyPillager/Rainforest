From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Mariell Hoversholm <proximyst@proximyst.com>
Date: Fri, 17 Jul 2020 21:34:45 +0200
Subject: [PATCH] Unsafe entity API

---
 .../craftbukkit/entity/CraftEntity.java       | 26 ++++++++++++
 .../craftbukkit/entity/CraftPlayer.java       | 42 ++++++++++++++++++-
 2 files changed, 67 insertions(+), 1 deletion(-)

diff --git a/src/main/java/org/bukkit/craftbukkit/entity/CraftEntity.java b/src/main/java/org/bukkit/craftbukkit/entity/CraftEntity.java
index d1df4e5799de4bf0a1fcc6940e2498374cd3db9d..7752399c0738d0a4968655b8b5ad38213f5485f7 100644
--- a/src/main/java/org/bukkit/craftbukkit/entity/CraftEntity.java
+++ b/src/main/java/org/bukkit/craftbukkit/entity/CraftEntity.java
@@ -6,6 +6,7 @@ import com.google.common.collect.Lists;
 import java.util.List;
 import java.util.Set;
 import java.util.UUID;
+import javax.annotation.concurrent.NotThreadSafe;
 import net.minecraft.server.AxisAlignedBB;
 import net.minecraft.server.BlockPosition;
 import net.minecraft.server.DamageSource;
@@ -1116,4 +1117,29 @@ public abstract class CraftEntity implements org.bukkit.entity.Entity {
         return getHandle().isInLava();
     }
     // Paper end
+
+    // Rainforest start
+    private final Unsafe unsafe = new Unsafe() {
+        @Override
+        public void rotate(float yaw, float pitch) {
+            getHandle().yaw = yaw;
+            getHandle().pitch = pitch;
+        }
+
+        @Override
+        public void setInvisible(boolean invisibility) {
+            getHandle().setInvisible(invisibility);
+        }
+
+        @Override
+        public void setInvulnerable(boolean invulnerablity) {
+            getHandle().setInvulnerable(invulnerablity);
+        }
+    };
+
+    @Override
+    public Unsafe getUnsafeApi() {
+        return unsafe;
+    }
+    // Rainforest end
 }
diff --git a/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java b/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java
index adf918fd757fe3147f897de3ade64a9adf1d3203..ceef56b3cbacf153477cb7fc8b2a4dedc299bc0f 100644
--- a/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java
+++ b/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java
@@ -55,8 +55,10 @@ import net.minecraft.server.PacketPlayOutBlockChange;
 import net.minecraft.server.PacketPlayOutChat;
 import net.minecraft.server.PacketPlayOutCustomPayload;
 import net.minecraft.server.PacketPlayOutCustomSoundEffect;
+import net.minecraft.server.PacketPlayOutEntityDestroy;
 import net.minecraft.server.PacketPlayOutExperience;
 import net.minecraft.server.PacketPlayOutMap;
+import net.minecraft.server.PacketPlayOutMount;
 import net.minecraft.server.PacketPlayOutNamedSoundEffect;
 import net.minecraft.server.PacketPlayOutPlayerInfo;
 import net.minecraft.server.PacketPlayOutPlayerListHeaderFooter;
@@ -117,6 +119,7 @@ import org.bukkit.craftbukkit.util.CraftMagicNumbers;
 import org.bukkit.craftbukkit.util.CraftNamespacedKey;
 import org.bukkit.entity.EntityType;
 import org.bukkit.entity.Player;
+import org.bukkit.entity.Player.Unsafe;
 import org.bukkit.event.player.PlayerRegisterChannelEvent;
 import org.bukkit.event.player.PlayerTeleportEvent;
 import org.bukkit.event.player.PlayerUnregisterChannelEvent;
@@ -826,7 +829,7 @@ public class CraftPlayer extends CraftHumanEntity implements Player {
     public boolean setPassenger(org.bukkit.entity.Entity passenger) {
         boolean wasSet = super.setPassenger(passenger);
         if (wasSet) {
-            this.getHandle().playerConnection.sendPacket(new net.minecraft.server.PacketPlayOutMount(this.getHandle()));
+            this.getHandle().playerConnection.sendPacket(new PacketPlayOutMount(this.getHandle()));
         }
         return wasSet;
     }
@@ -2155,4 +2158,41 @@ public class CraftPlayer extends CraftHumanEntity implements Player {
         return spigot;
     }
     // Spigot end
+
+    // Rainforest start
+    private final Player.Unsafe unsafe = new Player.Unsafe() {
+        @Override
+        public void destroyEntity(org.bukkit.entity.Entity entity) {
+            if (getHandle().playerConnection == null) return;
+            getHandle().playerConnection.sendPacket(new PacketPlayOutEntityDestroy(entity.getEntityId()));
+        }
+
+        @Override
+        public void updatePassengers() {
+            if (getHandle().playerConnection == null) return;
+            getHandle().playerConnection.sendPacket(new PacketPlayOutMount(getHandle()));
+        }
+
+        @Override
+        public void rotate(float yaw, float pitch) {
+            getHandle().yaw = yaw;
+            getHandle().pitch = pitch;
+        }
+
+        @Override
+        public void setInvisible(boolean invisibility) {
+            getHandle().setInvisible(invisibility);
+        }
+
+        @Override
+        public void setInvulnerable(boolean invulnerablity) {
+            getHandle().setInvulnerable(invulnerablity);
+        }
+    };
+
+    @Override
+    public Player.Unsafe getUnsafeApi() {
+        return unsafe;
+    }
+    // Rainforest end
 }
