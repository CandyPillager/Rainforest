From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Mariell Hoversholm <proximyst@proximyst.com>
Date: Sat, 31 Oct 2020 10:02:22 +0100
Subject: [PATCH] Rewrite enum to/from NMS type methods

---
 .../block/data/CraftBlockData.java            | 56 +++----------------
 1 file changed, 9 insertions(+), 47 deletions(-)

diff --git a/src/main/java/org/bukkit/craftbukkit/block/data/CraftBlockData.java b/src/main/java/org/bukkit/craftbukkit/block/data/CraftBlockData.java
index 820644e0971b42a9698208544232ea87a04ed4a9..b80a3bf2e40514a26c03708fb5fac287ff471d9d 100644
--- a/src/main/java/org/bukkit/craftbukkit/block/data/CraftBlockData.java
+++ b/src/main/java/org/bukkit/craftbukkit/block/data/CraftBlockData.java
@@ -137,7 +137,7 @@ public class CraftBlockData implements BlockData {
         return exactMatch;
     }
 
-    private static final Map<Class, BiMap<Enum<?>, Enum<?>>> classMappings = new HashMap<>();
+    private static final Map<Class<? extends Enum<?>>, Enum<?>[]> ENUM_VALUES = new HashMap<>(); // Rainforest
 
     /**
      * Convert an NMS Enum (usually a BlockStateEnum) to its appropriate Bukkit
@@ -147,32 +147,13 @@ public class CraftBlockData implements BlockData {
      */
     @SuppressWarnings("unchecked")
     private static <B extends Enum<B>> B toBukkit(Enum<?> nms, Class<B> bukkit) {
-        Enum<?> converted;
-        BiMap<Enum<?>, Enum<?>> nmsToBukkit = classMappings.get(nms.getClass());
-
-        if (nmsToBukkit != null) {
-            converted = nmsToBukkit.get(nms);
-            if (converted != null) {
-                return (B) converted;
-            }
-        }
-
+        // Rainforest start - rewrite this
         if (nms instanceof EnumDirection) {
-            converted = CraftBlock.notchToBlockFace((EnumDirection) nms);
-        } else {
-            converted = bukkit.getEnumConstants()[nms.ordinal()];
+            return (B) CraftBlock.notchToBlockFace((EnumDirection) nms);
         }
 
-        Preconditions.checkState(converted != null, "Could not convert enum %s->%s", nms, bukkit);
-
-        if (nmsToBukkit == null) {
-            nmsToBukkit = HashBiMap.create();
-            classMappings.put(nms.getClass(), nmsToBukkit);
-        }
-
-        nmsToBukkit.put(nms, converted);
-
-        return (B) converted;
+        return (B) ENUM_VALUES.computeIfAbsent(bukkit, Class::getEnumConstants)[nms.ordinal()];
+        // Rainforest end
     }
 
     /**
@@ -185,32 +166,13 @@ public class CraftBlockData implements BlockData {
      */
     @SuppressWarnings("unchecked")
     private static <N extends Enum<N> & INamable> N toNMS(Enum<?> bukkit, Class<N> nms) {
-        Enum<?> converted;
-        BiMap<Enum<?>, Enum<?>> nmsToBukkit = classMappings.get(nms);
-
-        if (nmsToBukkit != null) {
-            converted = nmsToBukkit.inverse().get(bukkit);
-            if (converted != null) {
-                return (N) converted;
-            }
-        }
-
+        // Rainforest start - rewrite this
         if (bukkit instanceof BlockFace) {
-            converted = CraftBlock.blockFaceToNotch((BlockFace) bukkit);
-        } else {
-            converted = nms.getEnumConstants()[bukkit.ordinal()];
+            return (N) CraftBlock.blockFaceToNotch((BlockFace) bukkit);
         }
 
-        Preconditions.checkState(converted != null, "Could not convert enum %s->%s", nms, bukkit);
-
-        if (nmsToBukkit == null) {
-            nmsToBukkit = HashBiMap.create();
-            classMappings.put(nms, nmsToBukkit);
-        }
-
-        nmsToBukkit.put(converted, bukkit);
-
-        return (N) converted;
+        return (N) ENUM_VALUES.computeIfAbsent(nms, Class::getEnumConstants)[bukkit.ordinal()];
+        // Rainforest end
     }
 
     /**
