From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Mariell Hoversholm <proximyst@proximyst.com>
Date: Sat, 18 Jul 2020 12:03:44 +0200
Subject: [PATCH] Add more dupe options

---
 .../java/com/proximyst/rainforest/RainforestConfig.java  | 9 +++++++++
 .../com/proximyst/rainforest/RainforestWorldConfig.java  | 5 +++++
 src/main/java/net/minecraft/server/Entity.java           | 8 +++++---
 .../java/net/minecraft/server/EntityEnderDragon.java     | 1 +
 .../java/net/minecraft/server/EntityFallingBlock.java    | 5 +++--
 src/main/java/net/minecraft/server/EntityPlayer.java     | 3 ++-
 src/main/java/net/minecraft/server/PlayerConnection.java | 3 ++-
 .../org/bukkit/craftbukkit/event/CraftEventFactory.java  | 2 ++
 8 files changed, 29 insertions(+), 7 deletions(-)

diff --git a/src/main/java/com/proximyst/rainforest/RainforestConfig.java b/src/main/java/com/proximyst/rainforest/RainforestConfig.java
index 0d854bda9611b45d78815f9fe9cafb8901de210f..e698f8c8c3bfbd96465e7f7c3c3fee63ff0efd22 100644
--- a/src/main/java/com/proximyst/rainforest/RainforestConfig.java
+++ b/src/main/java/com/proximyst/rainforest/RainforestConfig.java
@@ -185,4 +185,13 @@ public final class RainforestConfig {
     config.addDefault(path, def);
     return config.getString(path, config.getString(path));
   }
+
+  public static boolean allowPlayerItemDuplication = false;
+  public static boolean allowRidableChestDuping = false;
+  public static boolean allowSandDuping = false;
+  private static void dupeOptions() {
+    allowPlayerItemDuplication = getBoolean("allow-player-item-duplication", allowPlayerItemDuplication);
+    allowRidableChestDuping = getBoolean("allow-ridable-chestable-duping", allowRidableChestDuping);
+    allowSandDuping = getBoolean("allow-sand-duping", allowSandDuping);
+  }
 }
diff --git a/src/main/java/com/proximyst/rainforest/RainforestWorldConfig.java b/src/main/java/com/proximyst/rainforest/RainforestWorldConfig.java
index 22d920686418e86aec8be37f125123682af023a3..ff5970377ad1d71ec4065938a62bd5a7261e1fbc 100644
--- a/src/main/java/com/proximyst/rainforest/RainforestWorldConfig.java
+++ b/src/main/java/com/proximyst/rainforest/RainforestWorldConfig.java
@@ -65,4 +65,9 @@ public final class RainforestWorldConfig {
     return config
         .getString("world-settings." + worldName + "." + path, config.getString("world-settings.default." + path));
   }
+
+  public boolean allowEnderDragonExpDuping = false;
+  private void dupeOptions() {
+    allowEnderDragonExpDuping = getBoolean("allow-dragon-exp-duping", allowEnderDragonExpDuping);
+  }
 }
diff --git a/src/main/java/net/minecraft/server/Entity.java b/src/main/java/net/minecraft/server/Entity.java
index b845e488e3b9a4f19d1fcf169533046b7e72ba28..4ec409b9793641a8447d9811c6384495a0fca99c 100644
--- a/src/main/java/net/minecraft/server/Entity.java
+++ b/src/main/java/net/minecraft/server/Entity.java
@@ -3,6 +3,7 @@ package net.minecraft.server;
 import com.google.common.collect.Iterables;
 import com.google.common.collect.Lists;
 import com.google.common.collect.Sets;
+import com.proximyst.rainforest.RainforestConfig;
 import it.unimi.dsi.fastutil.objects.Object2DoubleArrayMap;
 import it.unimi.dsi.fastutil.objects.Object2DoubleMap;
 import java.util.Arrays;
@@ -1910,6 +1911,7 @@ public abstract class Entity implements INamableTileEntity, ICommandListener, Ke
             }
             // CraftBukkit end
             EntityItem entityitem = new EntityItem(this.world, this.locX(), this.locY() + (double) f, this.locZ(), itemstack.cloneItemStack()); // Paper - clone so we can destroy original
+            if (!RainforestConfig.allowRidableChestDuping) // Rainforest
             itemstack.setCount(0); // Paper - destroy this item - if this ever leaks due to game bugs, ensure it doesn't dupe
 
             entityitem.defaultPickupDelay();
@@ -2559,7 +2561,7 @@ public abstract class Entity implements INamableTileEntity, ICommandListener, Ke
     public Entity teleportTo(WorldServer worldserver, BlockPosition location) {
         // CraftBukkit end
         // Paper start - fix bad state entities causing dupes
-        if (!isAlive() || !valid) {
+        if (!RainforestConfig.allowRidableChestDuping && (!isAlive() || !valid)) { // Rainforest
             LOGGER.warn("Illegal Entity Teleport " + this + " to " + worldserver + ":" + location, new Throwable());
             return null;
         }
@@ -2599,7 +2601,7 @@ public abstract class Entity implements INamableTileEntity, ICommandListener, Ke
                     entity.bukkitEntity = this.getBukkitEntity();
 
                     if (this instanceof EntityInsentient) {
-                        ((EntityInsentient) this).unleash(true, true); // Paper drop lead
+                        ((EntityInsentient) this).unleash(true, !RainforestConfig.allowRidableChestDuping); // Paper drop lead // Rainforest
                     }
                     // CraftBukkit end
                 }
@@ -2719,7 +2721,7 @@ public abstract class Entity implements INamableTileEntity, ICommandListener, Ke
     }
 
     public boolean canPortal() {
-        return isAlive() && valid; // Paper
+        return RainforestConfig.allowRidableChestDuping || isAlive() && valid; // Paper // Rainforest
     }
 
     public float a(Explosion explosion, IBlockAccess iblockaccess, BlockPosition blockposition, IBlockData iblockdata, Fluid fluid, float f) {
diff --git a/src/main/java/net/minecraft/server/EntityEnderDragon.java b/src/main/java/net/minecraft/server/EntityEnderDragon.java
index 6b2c5e8d4640e19d33cbfe76d2399e6100890dbc..8b8ebffb89f11cfbc51b470e77171ea490a9aa18 100644
--- a/src/main/java/net/minecraft/server/EntityEnderDragon.java
+++ b/src/main/java/net/minecraft/server/EntityEnderDragon.java
@@ -839,6 +839,7 @@ public class EntityEnderDragon extends EntityInsentient implements IMonster {
         if (nbttagcompound.hasKey("DragonPhase")) {
             this.bG.setControllerPhase(DragonControllerPhase.getById(nbttagcompound.getInt("DragonPhase")));
         }
+        if (!world.rainforestConfig.allowEnderDragonExpDuping) // Rainforest
         this.deathAnimationTicks = nbttagcompound.getInt("Paper.DeathTick"); // Paper
 
     }
diff --git a/src/main/java/net/minecraft/server/EntityFallingBlock.java b/src/main/java/net/minecraft/server/EntityFallingBlock.java
index 492a4cf1a8b1a26624b093d7f6946bfd8277c4f9..bdc26a00f73ac983c633c4bc26971230523fe21a 100644
--- a/src/main/java/net/minecraft/server/EntityFallingBlock.java
+++ b/src/main/java/net/minecraft/server/EntityFallingBlock.java
@@ -1,6 +1,7 @@
 package net.minecraft.server;
 
 import com.google.common.collect.Lists;
+import com.proximyst.rainforest.RainforestConfig;
 import java.util.Iterator;
 import java.util.List;
 
@@ -65,7 +66,7 @@ public class EntityFallingBlock extends Entity {
     @Override
     public void tick() {
         // Paper start - fix sand duping
-        if (this.dead) {
+        if (this.dead && !RainforestConfig.allowSandDuping) { // Rainforest
             return;
         }
         // Paper end - fix sand duping
@@ -92,7 +93,7 @@ public class EntityFallingBlock extends Entity {
             this.move(EnumMoveType.SELF, this.getMot());
 
             // Paper start - fix sand duping
-            if (this.dead) {
+            if (this.dead && !RainforestConfig.allowSandDuping) { // Rainforest
                 return;
             }
             // Paper end - fix sand duping
diff --git a/src/main/java/net/minecraft/server/EntityPlayer.java b/src/main/java/net/minecraft/server/EntityPlayer.java
index 8e1655a975af24f6781a95be7030afa8f1b14472..fbbdc47efdc54dd0becc4f2873893eb3ed156835 100644
--- a/src/main/java/net/minecraft/server/EntityPlayer.java
+++ b/src/main/java/net/minecraft/server/EntityPlayer.java
@@ -7,6 +7,7 @@ import com.mojang.authlib.GameProfile;
 import com.mojang.datafixers.util.Either;
 import com.mojang.serialization.DataResult;
 import java.util.ArrayDeque; // Paper
+import com.proximyst.rainforest.RainforestConfig;
 import java.util.Collection;
 import java.util.Deque; // Paper
 import java.util.Iterator;
@@ -2076,7 +2077,7 @@ public class EntityPlayer extends EntityHuman implements ICrafting {
 
     @Override
     public boolean isFrozen() { // Paper - protected > public
-        return super.isFrozen() || (this.playerConnection != null && this.playerConnection.isDisconnected()); // Paper
+        return super.isFrozen() || (RainforestConfig.allowPlayerItemDuplication ? !this.playerConnection.isDisconnected() : this.playerConnection != null && this.playerConnection.isDisconnected()); // Paper // Rainforest
     }
 
     @Override
diff --git a/src/main/java/net/minecraft/server/PlayerConnection.java b/src/main/java/net/minecraft/server/PlayerConnection.java
index 4b0ff3e1acd91e0f28af9a900a4868c5a3b76caa..fd1c4452999a6fb16891d74b7d5562f015e30f70 100644
--- a/src/main/java/net/minecraft/server/PlayerConnection.java
+++ b/src/main/java/net/minecraft/server/PlayerConnection.java
@@ -5,6 +5,7 @@ import com.google.common.primitives.Floats;
 import com.mojang.brigadier.ParseResults;
 import com.mojang.brigadier.StringReader;
 import io.netty.buffer.Unpooled;
+import com.proximyst.rainforest.RainforestConfig;
 import io.netty.util.concurrent.Future;
 import io.netty.util.concurrent.GenericFutureListener;
 import it.unimi.dsi.fastutil.ints.Int2ShortMap;
@@ -2806,7 +2807,7 @@ public class PlayerConnection implements PacketListenerPlayIn {
     // Paper end
 
     public final boolean isDisconnected() {
-        return (!this.player.joining && !this.networkManager.isConnected()) || this.processedDisconnect; // Paper
+        return (!this.player.joining && !this.networkManager.isConnected()) || RainforestConfig.allowPlayerItemDuplication || this.processedDisconnect; // Paper // Rainforest
     }
     // CraftBukkit end
 
diff --git a/src/main/java/org/bukkit/craftbukkit/event/CraftEventFactory.java b/src/main/java/org/bukkit/craftbukkit/event/CraftEventFactory.java
index 0f0d70c0622558740086f0f7cf89e5500128f955..f021bb37af08a83aec0aa18c98e6e49c23cca44e 100644
--- a/src/main/java/org/bukkit/craftbukkit/event/CraftEventFactory.java
+++ b/src/main/java/org/bukkit/craftbukkit/event/CraftEventFactory.java
@@ -4,6 +4,7 @@ import com.google.common.base.Function;
 import com.google.common.base.Functions;
 import com.google.common.collect.Lists;
 import com.mojang.datafixers.util.Either;
+import com.proximyst.rainforest.RainforestConfig;
 import java.net.InetAddress;
 import java.util.ArrayList;
 import java.util.Collections;
@@ -812,6 +813,7 @@ public class CraftEventFactory {
             if (stack == null || stack.getType() == Material.AIR || stack.getAmount() == 0) continue;
 
             world.dropItem(entity.getLocation(), stack); // Paper - note: dropItem already clones due to this being bukkit -> NMS
+            if (!RainforestConfig.allowRidableChestDuping) // Rainforest
             if (stack instanceof CraftItemStack) stack.setAmount(0); // Paper - destroy this item - if this ever leaks due to game bugs, ensure it doesn't dupe, but don't nuke bukkit stacks of manually added items
         }
 
